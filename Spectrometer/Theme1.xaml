<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Spectrometer"
                    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf">
    <Color x:Key="Color_BackDark">#141414</Color>
    <Color x:Key="Color_BackLight">#4A4A4A</Color>
    <Color x:Key="Color_BackSide">#1F1F1F</Color>
    <Color x:Key="Color_HightLight_1">#787878</Color>
    <Color x:Key="Color_RedMain">#E81123</Color>
    <Color x:Key="Color_HL1">#4D4E5B</Color>
    <Color x:Key="Color_HL2">#656877</Color>
    <Color x:Key="Color_Foreground_1">#FFFFFF</Color>
    <Color x:Key="Color_Foreground_Pass">#A5A5A5</Color>
    <Color x:Key="Color_HightLight_2">#FF142F</Color>
    <Color x:Key="Color_Button_MouseOver">#CC1023</Color>
    <Color x:Key="Color_MouseOver">#282828</Color>
    <Color x:Key="Color_BoxBack">#2D2D2D</Color>
    <Color x:Key="Color_ButtonBack_1">#9B9B9B</Color>
    
    <SolidColorBrush x:Key="Brush_BackDark" Color="{StaticResource Color_BackDark}"/>
    <SolidColorBrush x:Key="Brush_BackLight" Color="{StaticResource Color_BackLight}"/>
    <SolidColorBrush x:Key="Brush_BackSide" Color="{StaticResource Color_BackSide}"/>
    <SolidColorBrush x:Key="Brush_MouseOver" Color="{StaticResource Color_MouseOver}"/>
    <SolidColorBrush x:Key="Brush_Foreground" Color="{StaticResource Color_Foreground_1}"/>
    <SolidColorBrush x:Key="Brush_Foreground_Pass" Color="{StaticResource Color_Foreground_Pass}"/>
    <SolidColorBrush x:Key="Brush_Hightlight_1" Color="{StaticResource Color_HightLight1}"/>
    <SolidColorBrush x:Key="Brush_HightLight_2" Color="{StaticResource Color_HightLight_2}"/>
    <SolidColorBrush x:Key="Brush_Button_MouseOver" Color="{StaticResource Color_Button_MouseOver}"/>
    <SolidColorBrush x:Key="Brush_BoxBack" Color="{StaticResource Color_BoxBack}"/>
    <SolidColorBrush x:Key="Brush_ButtonBack_1" Color="{StaticResource Color_ButtonBack_1}"/>

    <Style x:Key="ExpanderStyle" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
    </Style>

    <Style x:Key="NUD_Style" TargetType="{x:Type xctk:DoubleUpDown}">
        <Setter Property="Background" Value="{DynamicResource Brush_BoxBack}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DoubleUpDown}">
                    <Border CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter/>
                            <xctk:ButtonSpinner x:Name="PART_Spinner"
                               IsTabStop="False"
                               Background="{TemplateBinding Background}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                               ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                               ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}">

                                <xctk:WatermarkTextBox x:Name="PART_TextBox"
                                    BorderThickness="0"
                                    Background="Transparent"
                                    ContextMenu="{TemplateBinding ContextMenu}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="True"
                                    MinWidth="20"
                                    AcceptsReturn="False"
                                    Padding="{TemplateBinding Padding}"
                                    AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                    AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    TextWrapping="NoWrap"
                                    TabIndex="{TemplateBinding TabIndex}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                    WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}">
                                    
                                    <xctk:WatermarkTextBox.Template>
                                        <ControlTemplate TargetType="xctk:WatermarkTextBox">
                                            <Border CornerRadius="3">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </xctk:WatermarkTextBox.Template>
                                </xctk:WatermarkTextBox>
                            </xctk:ButtonSpinner>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" SourceName="PART_TextBox" Value="True">
                            <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="{DynamicResource Brush_HightLight_2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="GridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource Brush_BackLight}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_HightLight_2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource Brush_BoxBack}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_BackDark}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush_HightLight_2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonSimpleStyle" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource Brush_ButtonBack_1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5 2 5 2"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_Button_MouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_HightLight_2}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonAutoStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="PART_Border"
                            CornerRadius="3"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSquare" TargetType="Button">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource Brush_BackLight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="4" Padding="2" Background="{TemplateBinding Background}" Name="borders">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource Color_HightLight_1}" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource Color_BackLight}" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush_HightLight_2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ExpanderSimpleStyle" TargetType="Expander">
        <Style.Resources>
            <Style TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="14" Height="14">
                                <Rectangle Fill="{DynamicResource primaryBackgroundBrush}" />
                                <Border Name="ExpandBorder" RenderOptions.EdgeMode="Aliased" BorderBrush="Black" BorderThickness="2">
                                    <Path RenderOptions.EdgeMode="Aliased" Name="ExpandPath" Stroke="Black" Margin="0" StrokeThickness="2" Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Data" TargetName="ExpandPath" Value="M 1 5 L 9 5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ExpandBorder" Property="BorderBrush" Value="Gray" />
                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="Gray" />
                                    <Setter Property="Data" TargetName="ExpandPath" Value=""/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        
                        <StackPanel Orientation="Horizontal" Grid.Row="0" Name="HeaderPanel"
                                Panel.ZIndex="1"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1"
                                Background="Transparent"/>

                        <Border x:Name="Border"
                                Grid.Row="1"
                                BorderThickness="0"
                                Background="{DynamicResource Brush_BackLight}"
                                CornerRadius="0 0 3 3"
                                Margin="0"
                                ClipToBounds="True"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                            ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0 0 0 0"
                                CornerRadius="3 3 0 0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="4"/>
                                </Grid.RowDefinitions>

                                <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      Margin="12,2,12,8"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="{DynamicResource Brush_Foreground_Pass}"/>
                                <Rectangle Grid.Row="1" RadiusX="1" RadiusY="1" Fill="Transparent" Name="Rect" Margin="3 0 3 2"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Brush_MouseOver}"/>
                                <Setter Property="Fill" TargetName="Rect" Value="{DynamicResource Brush_BackLight}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Fill" TargetName="Rect" Value="{DynamicResource Brush_HightLight_2}"/>
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Brush_BackLight}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Brush_Foreground}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource Brush_Foreground}"/>
                            <Setter Property="Panel.ZIndex" Value="100"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Slider-->
    <Style TargetType="{x:Type Slider}" x:Key="SliderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Track Grid.Row="1" x:Name="PART_Track"   >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource SliderRepeatButtonLeft}"  Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource SliderThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource SliderRepeatButtonRight}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="SliderRepeatButtonLeft" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1 1 0 1" BorderBrush="{DynamicResource Brush_BackLight}" CornerRadius="2 0 0 2"
                             Background="{DynamicResource Brush_HightLight_2}" Height="6" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButtonRight" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="0 1 1 1" CornerRadius="0 3 3 0" BorderBrush="{DynamicResource Brush_BackLight}" 
                             Background="{DynamicResource Brush_BackSide}" Height="8" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="Border" Height="18" Width="12" 
                            CornerRadius="2" 
                            BorderThickness="0" Background="{DynamicResource Brush_ButtonBack_1}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Brush_Button_MouseOver}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Brush_HightLight_2}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End Slider-->

    <Style TargetType="{x:Type oxy:Plot}" x:Key="PlotStyle">
        <Setter Property="Background" Value="{DynamicResource Brush_BackSide}"/>
        <Setter Property="TextColor" Value="{DynamicResource Color_Foreground_1}"/>
        <Setter Property="PlotAreaBorderColor" Value="{DynamicResource Color_BackLight}"/>
        <Setter Property="PlotAreaBackground" Value="{DynamicResource Brush_BackDark}"/>
    </Style>
</ResourceDictionary>